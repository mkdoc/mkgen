var mkast = require('mkast')
  , parser = new mkast.Parser()
  , MSG = 'Generated by mkdoc'

/**
 *  Append or prepend a generator message string.
 *
 *  The message string is parsed as markdown and written to the end of the 
 *  stream unless `prepend` is given.
 *
 *  @function gen
 *  @param {Object} [opts] processing options.
 *  @param {Function} [cb] callback function.
 *
 *  @option {Readable=process.stdin} [input] input stream.
 *  @option {Writable=process.stdout} [output] output stream.
 *  @option {String} [message] generator message.
 *  @option {Boolean} [prepend] prepend message to the stream.
 *
 *  @returns an output stream.
 */
function gen(opts, cb) {

  /* istanbul ignore next: always pass options in test specs */
  opts = opts || {};
  /* istanbul ignore next: never use process streams in test specs */
  opts.input = opts.input || process.stdin;
  /* istanbul ignore next: never use process streams in test specs */
  opts.output = opts.output || process.stdout;

  var message = opts.message || MSG
    , node = parser.parse(message);

  // pass through stream, we append or prepend
  opts.input.pipe(opts.output);

  if(cb) {

    opts.output
      .once('error', cb)
      .once('finish', cb);
  }

  return opts.output;
}

module.exports = gen;
